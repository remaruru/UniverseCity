import tkinter as tk

def load_inventory():
    try:
        with open("inventory.txt", "r") as file:
            inventory_data = file.readlines()
            for item in inventory_data:
                item = item.strip().split(",")
                inventory[item[0]] = int(item[1])
    except FileNotFoundError:
        pass

def save_inventory():
    with open("inventory.txt", "w") as file:
        for item, quantity in inventory.items():
            file.write(f"{item},{quantity}\n")

def add_item():
    item = item_entry.get()
    quantity = int(quantity_entry.get())
    if item in inventory:
        inventory[item] += quantity
    else:
        inventory[item] = quantity
    update_display()

def remove_item():
    item = item_entry.get()
    quantity = int(quantity_entry.get())
    if item in inventory:
        inventory[item] -= quantity
        if inventory[item] <= 0:
            del inventory[item]
    update_display()

def update_display():
    inventory_display.config(state="normal")
    inventory_display.delete("1.0", tk.END)
    for item, quantity in inventory.items():
        inventory_display.insert(tk.END, f"{item}: {quantity}\n")
    inventory_display.config(state="disabled")

inventory = {}

root = tk.Tk()
root.title("Inventory Management System")

load_inventory()

item_label = tk.Label(root, text="Item:")
item_label.grid(row=0, column=0, padx=5, pady=5)
item_entry = tk.Entry(root)
item_entry.grid(row=0, column=1, padx=5, pady=5)

quantity_label = tk.Label(root, text="Quantity:")
quantity_label.grid(row=1, column=0, padx=5, pady=5)
quantity_entry = tk.Entry(root)
quantity_entry.grid(row=1, column=1, padx=5, pady=5)

add_button = tk.Button(root, text="Add Item", command=add_item)
add_button.grid(row=2, column=0, padx=5, pady=5)

remove_button = tk.Button(root, text="Remove Item", command=remove_item)
remove_button.grid(row=2, column=1, padx=5, pady=5)

inventory_display = tk.Text(root, height=10, width=30, state="disabled")
inventory_display.grid(row=3, columnspan=2, padx=5, pady=5)

update_display()

root.protocol("WM_DELETE_WINDOW", save_inventory)
root.mainloop()
